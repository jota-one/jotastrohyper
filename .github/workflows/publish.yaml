name: Publish

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      # cf. https://github.com/marketplace/actions/setup-pnpm
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: pnpm build

      - name: Set short sha
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/id
          ssh-keyscan -H ${{ secrets.VPS_SSH_HOST }} > ~/.ssh/known_hosts

      - name: Upload bundle
        run: |
          export PWD=$(pwd)
          tar -czf ${{ steps.vars.outputs.sha_short }}.tar.gz -C $PWD/pb .version -C $PWD/pb pb_hooks -C $PWD/pb pb_migrations -C $PWD/pb pb_public
          scp -i ~/.ssh/id ${{ steps.vars.outputs.sha_short }}.tar.gz ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }}:${{ secrets.VPS_WORK_DIR }}

      - name: Deploy built app on server
        run: ssh -i ~/.ssh/id ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} "cd ${{ secrets.VPS_WORK_DIR }} && export OLD_REF=$(cat ref) && tar -xf ${{ steps.vars.outputs.sha_short }}.tar.gz --one-top-level && ln -nfs ${{ steps.vars.outputs.sha_short }}/pb_migrations pb_migrations && ln -nfs ${{ steps.vars.outputs.sha_short }}/pb_hooks pb_hooks && ln -nfs ${{ steps.vars.outputs.sha_short }}/pb_public pb_public && ln -nfs ${{ steps.vars.outputs.sha_short }}/.version .version && echo ${{ steps.vars.outputs.sha_short }} > ref && rm *.tar.gz && rm -rf $OLD_REF"

      - name: Cleanup
        run: rm -rf ~/.ssh